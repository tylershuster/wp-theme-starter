/* =========================================
		Mixins -- Rem
   ========================================= */

/**
 * Use rem units with any property
 * with the correct pixel fallback
 *
 * REQUIRES that font-size on html
 * is set to 62.5%
 *
 * @link for more details, see:
 * http://hugogiraudel.com/2013/03/18/ultimate-rem-mixin/
 *
 * @uses parseInt() {function}
 *
 * @param $property 	css property
 * @param $values 		list containing sizes in rems or pixels
 */
@mixin rem($property, $values) {
	$px: (); /* 3 */
	$rem: (); /* 3 */

	@each $value in $values {
		/* 4 */

		@if $value == 0 or $value == auto {
			/* 5 */
			$px: append($px, $value);
			$rem: append($rem, $value);
		} @else {
			$unit: unit($value); /* 6 */
			$val: parseInt($value); /* 6 */

			@if $unit == "px" {
				/* 7 */
				$px: append($px, $value);
				$rem: append($rem, ($val / 10 + rem));
			}

			@if $unit == "rem" {
				/* 7 */
				$px: append($px, ($val * 10 + px));
				$rem: append($rem, $value);
			}
		}
	}

	@if $px == $rem {
		/* 8 */
		#{$property}: $px; /* 9 */
	} @else {
		#{$property}: $px; /* 9 */
		#{$property}: $rem; /* 9 */
	}
}